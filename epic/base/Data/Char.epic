module Data.Char

foreign data_char_eqChar : Char -> Char -> Bool
eqChar = data_char_eqChar
foreign data_char_neqChar : Char -> Char -> Bool
neqChar = data_char_neqChar

foreign data_char_showChar : Char -> String
showChar = data_char_showChar

foreign data_char_isControl     : Char -> Bool
isControl = data_char_isControl
foreign data_char_isSpace       : Char -> Bool
isSpace = data_char_isSpace
foreign data_char_isLower       : Char -> Bool
isLower = data_char_isLower
foreign data_char_isUpper       : Char -> Bool
isUpper = data_char_isUpper
foreign data_char_isAlpha       : Char -> Bool
isAlpha = data_char_isAlpha
foreign data_char_isAlphaNum    : Char -> Bool
isAlphaNum = data_char_isAlphaNum
foreign data_char_isPrint       : Char -> Bool
isPrint = data_char_isPrint
foreign data_char_isDigit       : Char -> Bool
isDigit = data_char_isDigit
foreign data_char_isOctDigit    : Char -> Bool
isOctDigit = data_char_isOctDigit
foreign data_char_isHexDigit    : Char -> Bool
isHexDigit = data_char_isHexDigit
foreign data_char_isLetter      : Char -> Bool
isLetter = data_char_isLetter
foreign data_char_isMark        : Char -> Bool
isMark = data_char_isMark
foreign data_char_isNumber      : Char -> Bool
isNumber = data_char_isNumber
foreign data_char_isPunctuation : Char -> Bool
isPunctuation = data_char_isPunctuation
foreign data_char_isSymbol      : Char -> Bool
isSymbol = data_char_isSymbol
foreign data_char_isSeparator   : Char -> Bool
isSeparator = data_char_isSeparator
foreign data_char_isAscii       : Char -> Bool
isAscii = data_char_isAscii
foreign data_char_isLatin1      : Char -> Bool
isLatin1 = data_char_isLatin1
foreign data_char_isAsciiUpper  : Char -> Bool
isAsciiUpper = data_char_isAsciiUpper
foreign data_char_isAsciiLower  : Char -> Bool
isAsciiLower = data_char_isAsciiLower

foreign data_char_toUpper : Char -> Char
toUpper = data_char_toUpper
foreign data_char_toLower : Char -> Char
toLower = data_char_toLower
foreign data_char_toTitle : Char -> Char
toTitle = data_char_toTitle

foreign data_char_digitToInt : Char -> Int
digitToInt = data_char_digitToInt
foreign data_char_intToDigit : Int -> Char
intToDigit = data_char_intToDigit

foreign data_char_ord : Char -> Int
ord = data_char_ord
foreign data_char_chr : Int -> Char
chr = data_char_chr
